{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","isError","value","preview","changeHandler","findMovie","addMovie","onSubmit","htmlFor","type","id","onChange","placeholder","onClick","BASE_URL","App","state","data","searchValue","event","target","setState","toLowerCase","preventDefault","fetch","trim","then","response","json","dataFromServer","Title","Plot","imdbID","Poster","some","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60186e2b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { FC, ChangeEvent, FormEvent } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  isError: boolean;\n  value: string;\n  changeHandler: (event: ChangeEvent<HTMLInputElement>) => void;\n  findMovie: (event: FormEvent<HTMLFormElement>) => void;\n  addMovie: () => void;\n  preview: Movie;\n}\n\nexport const FindMovie: FC<Props> = ({\n  isError,\n  value,\n  preview,\n  changeHandler,\n  findMovie,\n  addMovie,\n}) => (\n  <>\n    <form className=\"find-movie\" onSubmit={findMovie}>\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"movie-title\"\n            value={value}\n            onChange={changeHandler}\n            placeholder=\"Enter a title to search\"\n            className={`input ${isError ? 'is-danger' : ''}`}\n          />\n        </div>\n\n        {isError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-light\"\n          >\n            Find a movie\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={addMovie}\n          >\n            Add to the list\n          </button>\n        </div>\n      </div>\n    </form>\n\n    <div className=\"container\">\n      <h2 className=\"title\">Preview</h2>\n      {isError\n        ? 'No such movie'\n        : (<MovieCard {...preview} />)}\n    </div>\n  </>\n);\n","import React, { Component, ChangeEvent, FormEvent } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nconst BASE_URL = 'http://www.omdbapi.com/?apikey=4709decb&t=';\n\ninterface State {\n  movies: Movie[];\n  isError: boolean;\n  searchValue: string;\n  preview: Movie;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    movies: data,\n    isError: false,\n    searchValue: '',\n    preview: data[0],\n  };\n\n  changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    this.setState({\n      searchValue: target.value.toLowerCase(),\n      isError: false,\n    });\n  };\n\n  findMovie = (event: FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    fetch(`${BASE_URL}${this.state.searchValue.trim()}`)\n      .then(response => response.json())\n      .then(dataFromServer => {\n        const {\n          Title,\n          Plot,\n          imdbID,\n          Poster,\n        } = dataFromServer;\n\n        if ('Error' in dataFromServer) {\n          this.setState({\n            isError: true,\n            preview: data[0],\n          });\n        } else {\n          this.setState({\n            preview: {\n              title: Title,\n              imdbId: imdbID,\n              description: Plot,\n              imgUrl: Poster,\n              imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            },\n          });\n        }\n      });\n  };\n\n  addMovie = () => {\n    const isContain = this.state\n      .movies.some(movie => {\n        return movie.imdbId === this.state.preview.imdbId;\n      });\n\n    if (isContain) {\n      return;\n    }\n\n    this.setState((prevState => {\n      return {\n        movies: [...prevState.movies, prevState.preview],\n        searchValue: '',\n      };\n    }));\n  };\n\n  render() {\n    const {\n      movies,\n      isError,\n      searchValue,\n      preview,\n    } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            isError={isError}\n            value={searchValue}\n            findMovie={this.findMovie}\n            addMovie={this.addMovie}\n            changeHandler={this.changeHandler}\n            preview={preview}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}